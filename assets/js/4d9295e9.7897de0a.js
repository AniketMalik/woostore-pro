(self.webpackChunkwoostore_pro_documentation=self.webpackChunkwoostore_pro_documentation||[]).push([[6028],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return X},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},X=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,X=l(e,["components","mdxType","originalType","parentName"]),c=u(n),d=a,m=c["".concat(s,".").concat(d)]||c[d]||p[d]||i;return n?r.createElement(m,o(o({ref:t},X),{},{components:n})):r.createElement(m,o({ref:t},X))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8215:function(e,t,n){"use strict";var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},1395:function(e,t,n){"use strict";n.d(t,{Z:function(){return X}});var r=n(7294),a=n(944),i=n(6010),o="tabItem_1uMI",l="tabItemActive_2DSg";var s=37,u=39;var X=function(e){var t=e.lazy,n=e.block,X=e.defaultValue,p=e.values,c=e.groupId,d=e.className,m=(0,a.Z)(),f=m.tabGroupChoices,y=m.setTabGroupChoices,g=(0,r.useState)(X),h=g[0],k=g[1],b=r.Children.toArray(e.children),v=[];if(null!=c){var w=f[c];null!=w&&w!==h&&p.some((function(e){return e.value===w}))&&k(w)}var C=function(e){var t=e.currentTarget,n=v.indexOf(t),r=p[n].value;k(r),null!=c&&(y(c,r),setTimeout((function(){var e,n,r,a,i,o,s,u;(e=t.getBoundingClientRect(),n=e.top,r=e.left,a=e.bottom,i=e.right,o=window,s=o.innerHeight,u=o.innerWidth,n>=0&&i<=u&&a<=s&&r>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(l),setTimeout((function(){return t.classList.remove(l)}),2e3))}),150))},N=function(e){var t,n;switch(e.keyCode){case u:var r=v.indexOf(e.target)+1;n=v[r]||v[0];break;case s:var a=v.indexOf(e.target)-1;n=v[a]||v[v.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},d)},p.map((function(e){var t=e.value,n=e.label;return r.createElement("li",{role:"tab",tabIndex:h===t?0:-1,"aria-selected":h===t,className:(0,i.Z)("tabs__item",o,{"tabs__item--active":h===t}),key:t,ref:function(e){return v.push(e)},onKeyDown:N,onFocus:C,onClick:C},n)}))),t?(0,r.cloneElement)(b.filter((function(e){return e.props.value===h}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},b.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==h})}))))}},9443:function(e,t,n){"use strict";var r=(0,n(7294).createContext)(void 0);t.Z=r},944:function(e,t,n){"use strict";var r=n(7294),a=n(9443);t.Z=function(){var e=(0,r.useContext)(a.Z);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},4017:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return u},toc:function(){return X},default:function(){return c}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o=n(1395),l=n(8215),s={sidebar_position:4,sidebar_label:"Generate SHA-1 Fingerprint Manually"},u={unversionedId:"reference/sha-fingerprint-manually",id:"reference/sha-fingerprint-manually",isDocsHomePage:!1,title:"Generate SHA-1 Fingerprint Manually",description:"In this guide we will create SHA-1 Fingerprint manually using a terminal for Mac OS or Linux and command prompt for Windows.",source:"@site/docs/reference/sha-fingerprint-manually.mdx",sourceDirName:"reference",slug:"/reference/sha-fingerprint-manually",permalink:"/woostore_pro_documentation/reference/sha-fingerprint-manually",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/reference/sha-fingerprint-manually.mdx",version:"current",sidebar_label:"Generate SHA-1 Fingerprint Manually",sidebarPosition:4,frontMatter:{sidebar_position:4,sidebar_label:"Generate SHA-1 Fingerprint Manually"},sidebar:"tutorialSidebar",previous:{title:"Generate Keystore Manually",permalink:"/woostore_pro_documentation/reference/keystore-manually"},next:{title:"Generate Key Hashes Manually",permalink:"/woostore_pro_documentation/reference/key-hash-manually"}},X=[{value:"Debug Fingerprint",id:"debug-fingerprint",children:[]},{value:"Release Fingerprint",id:"release-fingerprint",children:[]}],p={toc:X};function c(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In this guide we will create ",(0,i.kt)("inlineCode",{parentName:"p"},"SHA-1 Fingerprint")," manually using a ",(0,i.kt)("inlineCode",{parentName:"p"},"terminal")," for Mac OS or Linux and ",(0,i.kt)("inlineCode",{parentName:"p"},"command prompt")," for Windows."),(0,i.kt)("h2",{id:"debug-fingerprint"},"Debug Fingerprint"),(0,i.kt)("p",null,"In this section we will create a debug certificate ",(0,i.kt)("inlineCode",{parentName:"p"},"SHA-1 Fingerprint")," manually using a ",(0,i.kt)("inlineCode",{parentName:"p"},"terminal")," for Mac OS or Linux and ",(0,i.kt)("inlineCode",{parentName:"p"},"command prompt")," for Windows."),(0,i.kt)(o.Z,{defaultValue:"mac/linux",values:[{label:"Mac / Linux",value:"mac/linux"},{label:"Windows",value:"win"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"mac/linux",mdxType:"TabItem"},(0,i.kt)("p",null,"  In a ",(0,i.kt)("inlineCode",{parentName:"p"},"terminal")," copy the following command and press enter"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"keytool -list -v -alias androiddebugkey -keystore ~/.android/debug.keystore\n")),(0,i.kt)("p",null,"  The keytool utility prompts you to enter a password for the keystore. The default password for the debug keystore is ",(0,i.kt)("inlineCode",{parentName:"p"},"android"),"."),(0,i.kt)("p",null,"  Finally this will print the fingerprints for the debug certificate like below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Result" {4}',title:'"Result"',"{4}":!0},"Certificate fingerprints:\n  \nMD5:  E6:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:25\nSHA1: CD:FD:FF:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:60:CC:6C\nSHA256: 9C:F2:85:F2:BF:AF:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:2F:E2:5B:48:21:A1\n")),(0,i.kt)("p",null,"  Copy the ",(0,i.kt)("inlineCode",{parentName:"p"},"SHA-1 Fingerprint")," value and save somewhere for later use.")),(0,i.kt)(l.Z,{value:"win",mdxType:"TabItem"},(0,i.kt)("p",null,"  In a ",(0,i.kt)("inlineCode",{parentName:"p"},"command prompt")," copy the following command and press enter"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'keytool -list -v -alias androiddebugkey -keystore "C:\\Users\\USERNAME\\.android\\debug.keystore"\n')),(0,i.kt)("p",null,"  The keytool utility prompts you to enter a password for the keystore. The default password for the debug keystore is ",(0,i.kt)("inlineCode",{parentName:"p"},"android"),"."),(0,i.kt)("p",null,"  You need to replace the ",(0,i.kt)("inlineCode",{parentName:"p"},"USERNAME")," from ",(0,i.kt)("inlineCode",{parentName:"p"},"C:\\Users\\USERNAME\\.android\\debug.keystore")," with your user PC name."),(0,i.kt)("p",null,"  Finally this will print the fingerprints for the debug certificate like below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Result" {4}',title:'"Result"',"{4}":!0},"Certificate fingerprints:\n  \nMD5:  E6:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:25\nSHA1: CD:FD:FF:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:60:CC:6C\nSHA256: 9C:F2:85:F2:BF:AF:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:2F:E2:5B:48:21:A1\n")),(0,i.kt)("p",null,"  Copy the ",(0,i.kt)("inlineCode",{parentName:"p"},"SHA-1 Fingerprint")," value and save somewhere for later use."))),(0,i.kt)("h2",{id:"release-fingerprint"},"Release Fingerprint"),(0,i.kt)("p",null,"In a terminal copy the following command and press enter to get the debug certificate fingerprint:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"keytool -list -v -alias <your-key-name> -keystore <path-to-production-keystore>\n")),(0,i.kt)("p",null,"Replace the ",(0,i.kt)("inlineCode",{parentName:"p"},"<your-key-name>")," with the key alias you entered while creating the release keystore."),(0,i.kt)("p",null,"Replace the ",(0,i.kt)("inlineCode",{parentName:"p"},"<path-to-production-keystore>")," with the path where your release keystore is located."),(0,i.kt)("p",null,"The keytool utility prompts you to enter a password for the keystore. The password for it will be the same password which you entered while creating your release keystore."),(0,i.kt)("p",null,"After you have edited your values into the command it should look something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Example after editing your values"',title:'"Example',after:!0,editing:!0,your:!0,'values"':!0},'keytool -list -v -alias "my_alias" -keystore "path/to/my/upload.keystore"\n')),(0,i.kt)("p",null,"Finally this will print the fingerprints for the debug certificate:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Result" {4}',title:'"Result"',"{4}":!0},"Certificate fingerprints:\n  \nMD5:  E6:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:25\nSHA1: CD:FD:FF:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:60:CC:6C\nSHA256: 9C:F2:85:F2:BF:AF:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:XX:2F:E2:5B:48:21:A1\n")),(0,i.kt)("p",null,"Copy the ",(0,i.kt)("inlineCode",{parentName:"p"},"SHA-1 Fingerprint")," value and save somewhere for later use."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Your debug and release ",(0,i.kt)("inlineCode",{parentName:"p"},"SHA-1 Fingerprint")," values are generated based on the debug and release keystore. Save these values for later use. You can now follow the guide again from where you came to this section.")))}c.isMDXComponent=!0},6010:function(e,t,n){"use strict";function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}function a(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}n.d(t,{Z:function(){return a}})}}]);